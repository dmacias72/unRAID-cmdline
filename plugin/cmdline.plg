<?xml version='1.0' standalone='yes'?>

<!DOCTYPE PLUGIN [
<!ENTITY name      "cmdline">
<!ENTITY author    "dmacias72">
<!ENTITY version   "2017.10.12">
<!ENTITY launch    "Settings/CommandLineSettingsTabs">
<!ENTITY gitURL    "https://raw.githubusercontent.com/&author;/unRAID-cmdline/master">
<!ENTITY pluginURL "&gitURL;/plugin/&name;.plg">
<!ENTITY pkgURL    "&gitURL;/packages">
<!ENTITY plgPATH   "/boot/config/plugins/&name;">
<!ENTITY plgNAME   "&name;-&version;-x86_64-1">
<!ENTITY emhttp    "/usr/local/emhttp/plugins/&name;">
]>

<PLUGIN name="&name;" author="&author;" launch="&launch;" version="&version;" pluginURL="&pluginURL;">

<!--
This Plugin installs and controls shellinabox for unRaid 6.1  All dependencies are installed as needed and is controlable from the webgui.
-->

<CHANGES>
##&name;
###2017.10.12
- move to separate repo
- update shellinabox package to latest 2.20
- fix: disable setting when running
###2017.05.21
- fix screenfetch not added to bash profile
###2017.02.05
- update some code to jquery
- add support link in readme
###2017.01.28
- update security for XSS and CSRF vulnerabilities
- strip down screenfetch for slackware/unRAID
- add unRAID version to screenshot
###2017.01.22
- update shellinabox unofficial to latest v2.20
- add: security patches
- fix: suppress var.ini parse error
###2016.10.22
- fix: ip connection for 6.2+
- add: tabs for terminal and settings
###2016.06.14
- add: dynamix plugin update api
- add: help content
###2016.03.24
- update shellinabox unofficial to pre 2.20
- fix: https when ssl is enabled
- remove linux-pam package
###2016.03.11
- add connect button on settings page
- add setting button on tools page
- rename plugin to cmdline since it is more than just shellinabox
- fix: conform screenfetch OS: to 80 columns (remove brackets)
- condense and restructure code
###2016.02.20
- fix: update plugin ovewriting home directory with saved
###2016.02.11a
- fix screenfetch error if emhttp/var.ini were not ready
###2016.02.11
- fix: chmod error
- fix: shutdown not saving
###2016.02.10
- remove array event scripts and move to rc script
- start and stop with system not array
- add: choice for command line screenshot
- add: choice to backup settings in root directory on shutdown
- add: backup restore on reboot e.g. mc settings, bash history
- add: selection of all users of group users for runas
###2016.01.07c
- add option to disable SSL
###2016.01.07b
- remove install cert button for now
###2016.01.07a
- fix cert link
###2016.01.07
- add ip address connection option
- add install certificate button
- fix starting service with changed settings not saving
- default config file
###2016.01.06
- change package path to plugin directory
- fix Tool/Command Line page
- fix misspelled cfg file
- fix default port 8088 to 4200
###2015.12.30
- remove old plugin directory on install
###2015.12.21
- move repo to unRAID-plugins
- change plugin name to shellinabox-plugin
- convert install and remove scripts
- add package md5 and unRAID version check
###2015.10.23
- fix "no version information" log errors
###2015.09.20
- update shellinabox packages to unofficial 2.19 (revision e30c33d)
- fix color styles
###2015.09.07
- fix start and stop scripts
###2015.09.06
- use markdown syntax and parse_plugin_cfg
- change color styles
###2015.09.05
- fixed start event
- add more color styles
- fixed icon and image on black theme
###2015.09.04
- start and stop events
- update run as user
- update image
###2015.09.03
- initial commit
</CHANGES>


<FILE Name="&plgPATH;/shellinabox-2.20-x86_64-4.txz" Min="6.1" Run="upgradepkg --install-new">
<URL>&pkgURL;/shellinabox-2.20-x86_64-4.txz</URL>
<MD5>f6a96b2ad8937d8e20a551821548d865</MD5>
</FILE>

<FILE Name="&plgPATH;/&name;.cfg">
<INLINE>
<![CDATA[
SERVICE="disable"
SSL="disable"
SCREEN="disable"
BACKUP="disable"
IPADDR="disable"
PORT="4200"
RUNAS="nobody"
CERT="certificate.pem"
]]>
</INLINE>
</FILE>

<!--
The 'plugin' package file.
-->
<FILE Name="&plgPATH;/&plgNAME;.txz">
<URL>&gitURL;/archive/&plgNAME;.txz</URL>
</FILE>

<!--
The 'plugin' package MD5 hash.
-->
<FILE Name="&plgPATH;/&plgNAME;.md5">
<URL>&gitURL;/archive/&plgNAME;.md5</URL>
</FILE>

<!-- WORKAROUND -->
<FILE Name="/tmp/start_service" Mode="0770">
<INLINE>
#!/bin/bash
# start shellinabox daemon
/etc/rc.d/rc.shellinaboxd startup
</INLINE>
</FILE>

<!--
The 'install' script.
-->
<FILE Run="/bin/bash">
<INLINE>
#Verify unRAID Version
source /etc/unraid-version
if [[ ${version:0:3} == 6.0 ]]; then
    echo "unRAID version 6.1 or higher is required"
    exit 1
fi

# Verify and install plugin package
sum1=$(/usr/bin/md5sum &plgPATH;/&plgNAME;.txz)
sum2=$(/usr/bin/cat &plgPATH;/&plgNAME;.md5)
if [ "${sum1:0:32}" != "${sum2:0:32}" ]; then
    echo "Wrong 'plugin' package md5 hash."
    rm &plgPATH;/&plgNAME;.txz
    rm &plgPATH;/&plgNAME;.md5
    exit 1
else
    # upgrade package
    upgradepkg --install-new &plgPATH;/&plgNAME;.txz

    # stop shellinabox daemon
    /etc/rc.d/rc.shellinaboxd stop

    # start shellinabox daemon
    echo "checking command line settings..."
    at -M -f /tmp/start_service now 2>/dev/null

    # Cleaning old source files
    find &plgPATH;/ -type f -iname "&name;*.txz" ! -iname "*&version;*" -delete
    find &plgPATH;/ -type f -iname "&name;*.md5" ! -iname "*&version;*" -delete

    echo ""
    echo "-----------------------------------------------------------"
    echo " &name; has been installed."
    echo " Copyright 2015-2017, &author;"
    echo " Version: &version;"
    echo "-----------------------------------------------------------"
    echo ""

fi
</INLINE>
</FILE>

<!--
The 'remove' script.
-->
<FILE Run="/bin/bash" Method="remove">
<INLINE>
# stop shellinabox daemon
/etc/rc.d/rc.shellinaboxd shutdown

removepkg &plgPATH;/*.txz
rm -rf &emhttp;
rm -f &plgPATH;/*.txz \
    &plgPATH;/*.md5

echo ""
echo "-----------------------------------------------------------"
echo " &name; has been removed."
echo " Copyright 2015-2017, &author;"
echo " Version: &version;"
echo "-----------------------------------------------------------"
echo ""
</INLINE>
</FILE>

<FILE Name="/tmp/cmdline-chkconf" Run="/bin/bash">
<INLINE>
<![CDATA[
#!/bin/sh
# This will check each entry in the config so nothing is missing, and if missing, sets to default
CFGFILE=/boot/config/plugins/cmdline/cmdline.cfg
[ ! `cat "$CFGFILE" | grep SERVICE` ] && echo "SERVICE=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep SCREEN`  ] && echo "SCREEN=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep BACKUP`  ] && echo "BACKUP=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep SSL`     ] && echo "SSL=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep IPADDR`  ] && echo "IPADDR=\"disable\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep ^PORT`   ] && echo "PORT=\"4200\"" >> "$CFGFILE"
[ ! `cat "$CFGFILE" | grep RUNAS`   ] && echo "RUNAS=\"nobody\"" >> "$CFGFILE"
rm /tmp/cmdline-chkconf
]]>
</INLINE>
</FILE>

</PLUGIN>